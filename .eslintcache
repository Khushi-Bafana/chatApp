[{"/home/xcoder963/Projects/perm/gantz_chat/src/index.js":"1","/home/xcoder963/Projects/perm/gantz_chat/src/App.js":"2","/home/xcoder963/Projects/perm/gantz_chat/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609596169289,"results":"4","hashOfConfig":"5"},{"size":3349,"mtime":1609685250416,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609596169289,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"v9z5mb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/xcoder963/Projects/perm/gantz_chat/src/index.js",[],["16","17"],"/home/xcoder963/Projects/perm/gantz_chat/src/App.js",["18","19"],"import React, { useEffect, useRef, useState } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n//This will be a single file application so i wont be reusing compnenets\n//So i will load everything in this file\nfirebase.initializeApp({\n    apiKey: \"AIzaSyD1miv5nPCHtDXOA0vIXWgQE-NPFgmOTlg\",\n    authDomain: \"gantzchatserver.firebaseapp.com\",\n    projectId: \"gantzchatserver\",\n    storageBucket: \"gantzchatserver.appspot.com\",\n    messagingSenderId: \"25585306690\",\n    appId: \"1:25585306690:web:2651a58343e93a00aff1db\",\n    measurementId: \"G-JTZJV1C03D\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n    const [user] = useAuthState(auth);\n\n    return (\n        <div>\n            <SignOut />\n            <section>\n                { user ? <ChatRoom /> : <SignIn /> }\n            </section>\n        </div>\n    );\n}\n\nfunction SignIn() {\n    const signInWithGoogle = () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.signInWithPopup(provider);\n    }\n    return (\n        <div>\n            <button onClick = { signInWithGoogle }>Sign In With Google</button>\n        </div>\n    )\n}\n\nfunction SignOut() {\n    return auth.currentUser && (\n        <div>\n            <button onClick = { () => auth.signOut() }>Sign Out</button>\n        </div>\n    )\n}\n\nfunction ChatRoom() {\n    const dumbSc = useRef();\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt', 'asc').limitToLast(25);\n\n    const [messages] = useCollectionData(query, { idField: 'id' });\n    const [formValue, setFormValue] = useState('');\n\n    const scrollToBottom = () => {\n        dumbSc.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    useEffect(scrollToBottom, [messages]);\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n\n        const { displayName, uid, photoURL } = auth.currentUser;\n\n        await messagesRef.add({\n            user: displayName,\n            body: formValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid: uid,\n            photoURL: photoURL\n        })\n\n        setFormValue('');\n        dumbSc.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <div>\n            <div>\n                { messages && messages.map(msg => <ChatMessage key = { msg.id } message = { msg } />) }\n                <span ref = { dumbSc }></span>\n            </div>\n            <form onSubmit = { sendMessage }>\n                <input value = { formValue } onChange = { (e) => setFormValue(e.target.value) } placeholder=\"Message here!!!!\" />\n                <button type = \"submit\" disabled = { !formValue }>send</button>\n            </form>\n        </div>\n    )\n}\n\nfunction ChatMessage(props) {\n    const { user, body, uid, photoURL, createdAt } = props.message;\n    \n    return (\n        <div>\n            <div>\n                <img src = { photoURL || 'https://i.imgur.com/rFbS5ms.png' } alt = \"{ user }'s pfp\" />\n            </div>\n            <div>\n                <p>{ user }</p>\n                <p>{ body }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","/home/xcoder963/Projects/perm/gantz_chat/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":104,"column":25,"nodeType":"26","messageId":"27","endLine":104,"endColumn":28},{"ruleId":"24","severity":1,"message":"28","line":104,"column":40,"nodeType":"26","messageId":"27","endLine":104,"endColumn":49},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","'createdAt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]